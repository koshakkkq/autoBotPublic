from aiogram.dispatcher.filters.state import State, StatesGroup
from create import dp, bot
from aiogram import types, Dispatcher
from aiogram.types.message import ContentType
from create import payToken
from utils import vip_status
import keyboards

class payState(StatesGroup):
    info = State()
    invoice = State()


async def pay_info(callback: types.CallbackQuery, state):
    PRICE = types.LabeledPrice(label='Vip –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü', amount=50000)
    await bot.send_invoice(
        callback.message.chat.id,
        title='–û—Ñ–æ—Ä–º–∏—Ç—å vip',
        description='–°—Ç–æ–∏–º–æ—Å—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞: 500 —Ä—É–±–ª–µ–π (—ç—Ç–æ 17 —Ä—É–±–ª–µ–π –≤ –¥–µ–Ω—å).\n\n–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëáüèº(—ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –æ–ø–ª–∞—Ç—ã,–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–≤–µ–∑–∏—Ç—ã : 1111 1111 1111 1026, 12/22, CVC 000',
        provider_token=payToken,
        currency='rub',
        is_flexible=False,
        prices=[PRICE],
        start_parameter='time-machine-example',
        payload='some-invoice-payload-for-our-internal-use', reply_markup=keyboards.hello.keyboardPay)

    await callback.answer()

async def process_pre_checkout_query(pre_checkout_query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


async def process_successful_payment(message: types.Message):
    res = await vip_status.set_vip(message.chat.id, 30, message.chat.first_name)
    if res == False:
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω—É @')
    else:
        await message.answer(
        text='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!ü•≥ü•≥ü•≥\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: *—Å—Å—ã–ª–∫–∞*\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /auto, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é —Å–æ –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –≤ –±–æ—Ç–µ.')


def register_handlers_client(dp: Dispatcher):
    # –†–µ–¥–∏—Ä–µ–∫—Ç –≤ pay
    dp.register_callback_query_handler(pay_info, state='*', text_startswith='pay')

    # –æ–ø–ª–∞—Ç–∫–∞
    dp.register_pre_checkout_query_handler(process_pre_checkout_query, lambda query: True, state='*')
    dp.register_message_handler(process_successful_payment, state='*', content_types=ContentType.SUCCESSFUL_PAYMENT)